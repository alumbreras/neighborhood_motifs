df.posts.4ch <- df.posts.4ch[1:75000,] # Paper
df.threads.4ch <- plyr::count(df.posts.4ch, "thread")
df.users.4ch <- plyr::count(df.posts.4ch, 'user')
names(df.threads.4ch)[2] <- "length"
names(df.users.4ch)[2] <- "posts"
df.posts.4chan$forum <- '4chan'
df.posts <- rbind(df.posts.got, df.post.pod, df.posts.4chan)
df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4chan)
load('./R_objects/dfposts_gameofthrones.Rda')
df.posts.got <- df.posts
df.posts.got$date <- as.numeric(df.posts.got$date)
df.posts.got <- data.frame(df.posts.got) %>% arrange(date)
df.posts.got <- df.posts.got[1:75000,] # Paper
df.threads.got <- plyr::count(df.posts.got, "thread")
df.users.got <- plyr::count(df.posts.got, 'user')
names(df.threads.got)[2] <- "length"
names(df.users.got)[2] <- "posts"
df.posts.got$forum <- 'gameofthrones'
load('./R_objects/dfposts_podemos.Rda')
df.posts.pod <- df.posts
df.posts.pod$date <- as.numeric(df.posts.pod$date)
df.posts.pod <- data.frame(df.posts.pod) %>% arrange(date)
df.posts.pod <- df.posts.pod[1:75000,] # Paper
df.threads.pod <- plyr::count(df.posts.pod, "thread")
df.users.pod <- plyr::count(df.posts.pod, 'user')
names(df.threads.pod)[2] <- "length"
names(df.users.pod)[2] <- "posts"
df.posts.pod$forum <- 'podemos'
load('./R_objects/dfposts_4chan.Rda')
df.posts.4ch <- df.posts
df.posts.4ch$date <- as.numeric(df.posts.4ch$date)
df.posts.4ch <- data.frame(df.posts.4ch) %>% arrange(date)
df.posts.4ch <- df.posts.4ch[1:75000,] # Paper
df.threads.4ch <- plyr::count(df.posts.4ch, "thread")
df.users.4ch <- plyr::count(df.posts.4ch, 'user')
names(df.threads.4ch)[2] <- "length"
names(df.users.4ch)[2] <- "posts"
df.posts.4ch$forum <- '4chan'
df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
head(df.posts)
filter(df.posts, forum = 'podemos')
filter(df.posts, forum == 'podemos')
filter(df.posts, forum == '4chan')
filter(df.posts, forum == '4chan')$date
dates.4chan <- filter(df.posts, forum == '4chan')$date
dates.4chan <- filter(df.posts, forum == 'podemos')$date
dates.4chan <- filter(df.posts, forum == 'gameofthrones')$date
dates.4chan <- filter(df.posts, forum == '4chan')$date
dates.got <- filter(df.posts, forum == 'gameofthrones')$date
dates.pod <- filter(df.posts, forum == 'podemos')$date
plot(dates.pod)
dates.4chan <- filter(df.posts, forum == '4chan')$date
dates.podemos <- filter(df.posts, forum == 'podemos')$date
dates.got <- filter(df.posts, forum == 'gameofthrones')$date
plot(dates.podemos)
lines(dates.got)
lines(dates.4chan)
par(mfrow=c(1,1))
dates.4chan <- filter(df.posts, forum == '4chan')$date
dates.podemos <- filter(df.posts, forum == 'podemos')$date
dates.got <- filter(df.posts, forum == 'gameofthrones')$date
plot(dates.podemos)
lines(dates.got)
lines(dates.4chan)
plot(dates.podemos)
plot(dates.4chan)
plot(dates.got)
plot(dates.podemos, cex=0.1, col='red')
lines(dates.got, cex=0.1, col='blue')
lines(dates.4chan, cex=0.1, col='black')
plot(dates.podemos, cex=0.1, col='red', ylim=c(0,max(dates.podemos)))
lines(dates.got, cex=0.1, col='blue')
lines(dates.4chan, cex=0.1, col='black')
plot(dates.podemos, cex=0.1, col='red', ylim=c(min(dates.4chan), max(dates.podemos)))
lines(dates.got, cex=0.1, col='blue')
lines(dates.4chan, cex=0.1, col='black')
load("./R_objects/res_struct_75000_gameofthrones.Rda")
#load("./R_objects/res_struct_75000_podemos.Rda")
res.got.struct <- res
# Add motif info to posts dataframe and sort by frequency
#df.post.motif  <- res.got.order$posts.motifs
#motifs <- res$motifs
df.posts.got <- merge(df.posts.got, res.got.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.struct <- res.got.struct$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.struct"
head(df.posts.got)
head(df.posts)
?merge
df.posts <- merge(df.posts, res.got.struct$posts.motifs, all.x=TRUE, all.y=FALSE, sort=FALSE)
head(df.posts)
head(df.posts,100)
tail(df.posts,100)
head(df.posts,100)
load('./R_objects/dfposts_gameofthrones.Rda')
df.posts.got <- df.posts
df.posts.got$date <- as.numeric(df.posts.got$date)
df.posts.got <- data.frame(df.posts.got) %>% arrange(date)
df.posts.got <- df.posts.got[1:75000,] # Paper
df.threads.got <- plyr::count(df.posts.got, "thread")
df.users.got <- plyr::count(df.posts.got, 'user')
names(df.threads.got)[2] <- "length"
names(df.users.got)[2] <- "posts"
df.posts.got$forum <- 'gameofthrones'
load('./R_objects/dfposts_podemos.Rda')
df.posts.pod <- df.posts
df.posts.pod$date <- as.numeric(df.posts.pod$date)
df.posts.pod <- data.frame(df.posts.pod) %>% arrange(date)
df.posts.pod <- df.posts.pod[1:75000,] # Paper
df.threads.pod <- plyr::count(df.posts.pod, "thread")
df.users.pod <- plyr::count(df.posts.pod, 'user')
names(df.threads.pod)[2] <- "length"
names(df.users.pod)[2] <- "posts"
df.posts.pod$forum <- 'podemos'
load('./R_objects/dfposts_4chan.Rda')
df.posts.4ch <- df.posts
df.posts.4ch$date <- as.numeric(df.posts.4ch$date)
df.posts.4ch <- data.frame(df.posts.4ch) %>% arrange(date)
df.posts.4ch <- df.posts.4ch[1:75000,] # Paper
df.threads.4ch <- plyr::count(df.posts.4ch, "thread")
df.users.4ch <- plyr::count(df.posts.4ch, 'user')
names(df.threads.4ch)[2] <- "length"
names(df.users.4ch)[2] <- "posts"
df.posts.4ch$forum <- '4chan'
df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
#par(mfrow=c(1,1))
#dates.4chan <- filter(df.posts, forum == '4chan')$date
#dates.podemos <- filter(df.posts, forum == 'podemos')$date
#dates.got <- filter(df.posts, forum == 'gameofthrones')$date
#plot(dates.podemos, cex=0.1, col='red', ylim=c(min(dates.4chan), max(dates.podemos)))
#lines(dates.got, cex=0.1, col='blue')
#lines(dates.4chan, cex=0.1, col='black')
########################################################
# Load neighbourhoods
########################################################
load("./R_objects/res_struct_75000_gameofthrones.Rda")
#load("./R_objects/res_struct_75000_podemos.Rda")
res.got.struct <- res
# Add motif info to posts dataframe and sort by frequency
#df.post.motif  <- res.got.order$posts.motifs
#motifs <- res$motifs
df.posts.got <- merge(df.posts.got, res.got.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.struct <- res.got.struct$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.struct))
all(n == cummin(n))
#################################
load("./R_objects/res_order_75000_gameofthrones.Rda")
#load("./R_objects/res_order_75000_podemos.Rda")
res.got.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.got <- merge(df.posts.got, res.got.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.order <- res.got.order$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.order))
all(n == cummin(n))
#################################
load("./R_objects/res_time_75000_gameofthrones.Rda")
#load("./R_objects/res_time_75000_podemos.Rda")
res.got.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.got <- merge(df.posts.got, res.got.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.time <- res.got.time$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.time))
all(n == cummin(n))
head(df.posts.got)
df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
load('./R_objects/dfposts_gameofthrones.Rda')
df.posts.got <- df.posts
df.posts.got$date <- as.numeric(df.posts.got$date)
df.posts.got <- data.frame(df.posts.got) %>% arrange(date)
df.posts.got <- df.posts.got[1:75000,] # Paper
df.threads.got <- plyr::count(df.posts.got, "thread")
df.users.got <- plyr::count(df.posts.got, 'user')
names(df.threads.got)[2] <- "length"
names(df.users.got)[2] <- "posts"
df.posts.got$forum <- 'gameofthrones'
load('./R_objects/dfposts_podemos.Rda')
df.posts.pod <- df.posts
df.posts.pod$date <- as.numeric(df.posts.pod$date)
df.posts.pod <- data.frame(df.posts.pod) %>% arrange(date)
df.posts.pod <- df.posts.pod[1:75000,] # Paper
df.threads.pod <- plyr::count(df.posts.pod, "thread")
df.users.pod <- plyr::count(df.posts.pod, 'user')
names(df.threads.pod)[2] <- "length"
names(df.users.pod)[2] <- "posts"
df.posts.pod$forum <- 'podemos'
load('./R_objects/dfposts_4chan.Rda')
df.posts.4ch <- df.posts
df.posts.4ch$date <- as.numeric(df.posts.4ch$date)
df.posts.4ch <- data.frame(df.posts.4ch) %>% arrange(date)
df.posts.4ch <- df.posts.4ch[1:75000,] # Paper
df.threads.4ch <- plyr::count(df.posts.4ch, "thread")
df.users.4ch <- plyr::count(df.posts.4ch, 'user')
names(df.threads.4ch)[2] <- "length"
names(df.users.4ch)[2] <- "posts"
df.posts.4ch$forum <- '4chan'
#df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
########################################################
# Load neighbourhoods
########################################################
load("./R_objects/res_struct_75000_gameofthrones.Rda")
res.got.struct <- res
# Add motif info to posts dataframe and sort by frequency
#df.post.motif  <- res.got.order$posts.motifs
#motifs <- res$motifs
df.posts.got <- merge(df.posts.got, res.got.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.struct <- res.got.struct$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.struct))
all(n == cummin(n))
#################################
load("./R_objects/res_order_75000_gameofthrones.Rda")
res.got.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.got <- merge(df.posts.got, res.got.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.order <- res.got.order$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.order))
all(n == cummin(n))
#################################
load("./R_objects/res_time_75000_gameofthrones.Rda")
res.got.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.got <- merge(df.posts.got, res.got.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.time <- res.got.time$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.time))
all(n == cummin(n))
load("./R_objects/res_struct_75000_podemos.Rda")
res.pod.struct <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.pod <- merge(df.posts.pod, res.pod.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.pod$motif), decreasing = TRUE) # get order by frequency
df.posts.pod$motif <- match(df.posts.pod$motif, idx) # re-arrange pointers to motifs
motifs.pod.struct <- res.pod.struct$motifs[idx] # re-sort motifs
colnames(df.posts.pod)[which(names(df.posts.pod) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.pod$motif.struct))
all(n == cummin(n))
load("./R_objects/res_order_75000_podemos.Rda")
res.pod.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.pod <- merge(df.posts.pod, res.pod.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.pod$motif), decreasing = TRUE) # get order by frequency
df.posts.pod$motif <- match(df.posts.pod$motif, idx) # re-arrange pointers to motifs
motifs.pod.order <- res.pod.order$motifs[idx] # re-sort motifs
colnames(df.posts.pod)[which(names(df.posts.pod) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.pod$motif.order))
all(n == cummin(n))
load("./R_objects/res_time_75000_podemos.Rda")
res.pod.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.pod <- merge(df.posts.pod, res.pod.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.pod$motif), decreasing = TRUE) # get order by frequency
df.posts.pod$motif <- match(df.posts.pod$motif, idx) # re-arrange pointers to motifs
motifs.pod.time <- res.pod.time$motifs[idx] # re-sort motifs
colnames(df.posts.pod)[which(names(df.posts.pod) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.pod$motif.time))
all(n == cummin(n))
#########
load("./R_objects/res_struct_75000_4chan.Rda")
res.4ch.struct <- res
# Add motif info to posts dataframe and sort by frequency
#df.post.motif  <- res.4ch.order$posts.motifs
#motifs <- res$motifs
df.posts.4ch <- merge(df.posts.4ch, res.4ch.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.4ch$motif), decreasing = TRUE) # get order by frequency
df.posts.4ch$motif <- match(df.posts.4ch$motif, idx) # re-arrange pointers to motifs
motifs.4ch.struct <- res.4ch.struct$motifs[idx] # re-sort motifs
colnames(df.posts.4ch)[which(names(df.posts.4ch) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.4ch$motif.struct))
all(n == cummin(n))
#################################
load("./R_objects/res_order_75000_4chan.Rda")
res.4ch.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.4ch <- merge(df.posts.4ch, res.4ch.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.4ch$motif), decreasing = TRUE) # get order by frequency
df.posts.4ch$motif <- match(df.posts.4ch$motif, idx) # re-arrange pointers to motifs
motifs.4ch.order <- res.4ch.order$motifs[idx] # re-sort motifs
colnames(df.posts.4ch)[which(names(df.posts.4ch) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.4ch$motif.order))
all(n == cummin(n))
#################################
load("./R_objects/res_time_75000_4chan.Rda")
res.4ch.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.4ch <- merge(df.posts.4ch, res.4ch.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.4ch$motif), decreasing = TRUE) # get order by frequency
df.posts.4ch$motif <- match(df.posts.4ch$motif, idx) # re-arrange pointers to motifs
motifs.4ch.time <- res.4ch.time$motifs[idx] # re-sort motifs
colnames(df.posts.4ch)[which(names(df.posts.4ch) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.4ch$motif.time))
all(n == cummin(n))
df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
head(df.posts)
head(df.posts,100)
par(mfrow=c(1,1))
n0 <- hist(df.posts.got$motif.struct, breaks=0:max(df.posts.got$motif.struct), plot=FALSE)$counts
n1 <- hist(df.posts.got$motif.order, breaks=0:max(df.posts.got$motif.order), plot=FALSE)$counts
n2 <- hist(df.posts.got$motif.time, breaks=0:max(df.posts.got$motif.time), plot=FALSE)$counts
plot(1:max(df.posts.got$motif.order), n1,
pch=19, cex=0.1, col='red',
ylim=c(1, 20000), xlim=c(0, max(df.posts.got$motif.struct)), log='y',
ylab='Frequency', xlab='Neighbourhood')
points(1:max(df.posts.got$motif.time), n2,
pch=19, cex=0.1, col='black')
points(1:max(df.posts.got$motif.struct), n0,
pch=19, cex=0.1, col='blue')
par(mfrow=c(1,1))
n0 <- hist(df.posts.got$motif.struct, breaks=0:max(df.posts.got$motif.struct), plot=FALSE)$counts
n1 <- hist(df.posts.got$motif.order, breaks=0:max(df.posts.got$motif.order), plot=FALSE)$counts
n2 <- hist(df.posts.got$motif.time, breaks=0:max(df.posts.got$motif.time), plot=FALSE)$counts
plot(1:max(df.posts.got$motif.order), n1,
pch=19, cex=0.1, col='red',
ylim=c(1, 20000), xlim=c(0, max(df.posts.got$motif.struct)), log='y',
ylab='Frequency', xlab='Neighbourhood')
points(1:max(df.posts.got$motif.time), n2,
pch=19, cex=0.1, col='black')
points(1:max(df.posts.got$motif.struct), n0,
pch=19, cex=0.1, col='blue')
source('~/Documentos/PhD/src/neighborhood_motifs/R/merge_indices.r')
motifs
dictionary
head(df.posts)
filter(df.posts, postid=='t3_1mrmha')
filter(df.posts, postid=='t3_1mrmha')$postid
filter(df.posts, postid=='t3_1mrmha')$postid <- "hola"
filter(df.posts, postid=='t3_1mrmha')$postid
df.posts.global <- df.posts
head(df.posts.global)
library(dplyr)
library(reshape2)
library(igraph)
source('merge_indices.r')
source('R/merge_indices.r')
########################################################
# Load posts from each forum
########################################################
load('./R_objects/dfposts_gameofthrones.Rda')
df.posts.got <- df.posts
df.posts.got$date <- as.numeric(df.posts.got$date)
df.posts.got <- data.frame(df.posts.got) %>% arrange(date)
df.posts.got <- df.posts.got[1:75000,] # Paper
df.threads.got <- plyr::count(df.posts.got, "thread")
df.users.got <- plyr::count(df.posts.got, 'user')
names(df.threads.got)[2] <- "length"
names(df.users.got)[2] <- "posts"
df.posts.got$forum <- 'gameofthrones'
load('./R_objects/dfposts_podemos.Rda')
df.posts.pod <- df.posts
df.posts.pod$date <- as.numeric(df.posts.pod$date)
df.posts.pod <- data.frame(df.posts.pod) %>% arrange(date)
df.posts.pod <- df.posts.pod[1:75000,] # Paper
df.threads.pod <- plyr::count(df.posts.pod, "thread")
df.users.pod <- plyr::count(df.posts.pod, 'user')
names(df.threads.pod)[2] <- "length"
names(df.users.pod)[2] <- "posts"
df.posts.pod$forum <- 'podemos'
load('./R_objects/dfposts_4chan.Rda')
df.posts.4ch <- df.posts
df.posts.4ch$date <- as.numeric(df.posts.4ch$date)
df.posts.4ch <- data.frame(df.posts.4ch) %>% arrange(date)
df.posts.4ch <- df.posts.4ch[1:75000,] # Paper
df.threads.4ch <- plyr::count(df.posts.4ch, "thread")
df.users.4ch <- plyr::count(df.posts.4ch, 'user')
names(df.threads.4ch)[2] <- "length"
names(df.users.4ch)[2] <- "posts"
df.posts.4ch$forum <- '4chan'
#df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
load("./R_objects/res_struct_75000_gameofthrones.Rda")
res.got.struct <- res
# Add motif info to posts dataframe and sort by frequency
#df.post.motif  <- res.got.order$posts.motifs
#motifs <- res$motifs
df.posts.got <- merge(df.posts.got, res.got.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.struct <- res.got.struct$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.struct))
all(n == cummin(n))
load("./R_objects/res_order_75000_gameofthrones.Rda")
res.got.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.got <- merge(df.posts.got, res.got.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.order <- res.got.order$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.order))
all(n == cummin(n))
load("./R_objects/res_time_75000_gameofthrones.Rda")
res.got.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.got <- merge(df.posts.got, res.got.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.got$motif), decreasing = TRUE) # get order by frequency
df.posts.got$motif <- match(df.posts.got$motif, idx) # re-arrange pointers to motifs
motifs.got.time <- res.got.time$motifs[idx] # re-sort motifs
colnames(df.posts.got)[which(names(df.posts.got) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.got$motif.time))
all(n == cummin(n))
load("./R_objects/res_struct_75000_podemos.Rda")
res.pod.struct <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.pod <- merge(df.posts.pod, res.pod.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.pod$motif), decreasing = TRUE) # get order by frequency
df.posts.pod$motif <- match(df.posts.pod$motif, idx) # re-arrange pointers to motifs
motifs.pod.struct <- res.pod.struct$motifs[idx] # re-sort motifs
colnames(df.posts.pod)[which(names(df.posts.pod) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.pod$motif.struct))
all(n == cummin(n))
load("./R_objects/res_order_75000_podemos.Rda")
res.pod.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.pod <- merge(df.posts.pod, res.pod.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.pod$motif), decreasing = TRUE) # get order by frequency
df.posts.pod$motif <- match(df.posts.pod$motif, idx) # re-arrange pointers to motifs
motifs.pod.order <- res.pod.order$motifs[idx] # re-sort motifs
colnames(df.posts.pod)[which(names(df.posts.pod) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.pod$motif.order))
all(n == cummin(n))
load("./R_objects/res_time_75000_podemos.Rda")
res.pod.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.pod <- merge(df.posts.pod, res.pod.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.pod$motif), decreasing = TRUE) # get order by frequency
df.posts.pod$motif <- match(df.posts.pod$motif, idx) # re-arrange pointers to motifs
motifs.pod.time <- res.pod.time$motifs[idx] # re-sort motifs
colnames(df.posts.pod)[which(names(df.posts.pod) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.pod$motif.time))
all(n == cummin(n))
load("./R_objects/res_struct_75000_4chan.Rda")
res.4ch.struct <- res
# Add motif info to posts dataframe and sort by frequency
#df.post.motif  <- res.4ch.order$posts.motifs
#motifs <- res$motifs
df.posts.4ch <- merge(df.posts.4ch, res.4ch.struct$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.4ch$motif), decreasing = TRUE) # get order by frequency
df.posts.4ch$motif <- match(df.posts.4ch$motif, idx) # re-arrange pointers to motifs
motifs.4ch.struct <- res.4ch.struct$motifs[idx] # re-sort motifs
colnames(df.posts.4ch)[which(names(df.posts.4ch) == "motif")] <- "motif.struct"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.4ch$motif.struct))
all(n == cummin(n))
load("./R_objects/res_order_75000_4chan.Rda")
res.4ch.order <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.4ch <- merge(df.posts.4ch, res.4ch.order$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.4ch$motif), decreasing = TRUE) # get order by frequency
df.posts.4ch$motif <- match(df.posts.4ch$motif, idx) # re-arrange pointers to motifs
motifs.4ch.order <- res.4ch.order$motifs[idx] # re-sort motifs
colnames(df.posts.4ch)[which(names(df.posts.4ch) == "motif")] <- "motif.order"
# Check the motifs ids are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.4ch$motif.order))
all(n == cummin(n))
load("./R_objects/res_time_75000_4chan.Rda")
res.4ch.time <- res
# Add motif info to posts dataframe and sort by frequency
df.posts.4ch <- merge(df.posts.4ch, res.4ch.time$posts.motifs, all=FALSE, sort=FALSE)
idx <- order(tabulate(df.posts.4ch$motif), decreasing = TRUE) # get order by frequency
df.posts.4ch$motif <- match(df.posts.4ch$motif, idx) # re-arrange pointers to motifs
motifs.4ch.time <- res.4ch.time$motifs[idx] # re-sort motifs
colnames(df.posts.4ch)[which(names(df.posts.4ch) == "motif")] <- "motif.time"
# Check they are sorted by frequency (they should be)
n <- as.numeric(table(df.posts.4ch$motif.time))
all(n == cummin(n))
df.posts <- rbind(df.posts.got, df.posts.pod, df.posts.4ch)
nrow(df.posts)
head(df.posts)
select(df.posts, -parent, -user, -date)
head(df.posts)
df.posts <- select(df.posts, -parent, -user, -date, -thread)
df.posts
head(df.posts)
sort( sapply(ls(),function(x){object.size(get(x))}))
object.size(res.pod.time)
object.size(res.pod.time)/(1024^2)
object.size(df.posts)/(1024^2)
object.size(res.pod.struct)/(1024^2)
